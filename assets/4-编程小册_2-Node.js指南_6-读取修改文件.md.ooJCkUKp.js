import{_ as s,c as a,o as n,U as p}from"./chunks/framework.QkLTjxkX.js";const _=JSON.parse('{"title":"读取修改文件","description":"","frontmatter":{"isOriginal":true,"icon":"markdown","category":"Node.js指南","tag":["读取修改文件"]},"headers":[],"relativePath":"4-编程小册/2-Node.js指南/6-读取修改文件.md","filePath":"4-编程小册/2-Node.js指南/6-读取修改文件.md","lastUpdated":null}'),e={name:"4-编程小册/2-Node.js指南/6-读取修改文件.md"},l=p(`<h1 id="读取修改文件" tabindex="-1">读取修改文件 <a class="header-anchor" href="#读取修改文件" aria-label="Permalink to &quot;读取修改文件&quot;">​</a></h1><p>很多时候，我们所听说的，JavaScript 是浏览器端语言，Node.js 可以作为服务器端语言。</p><p>那么，到底浏览器端语言和服务器端语言，到底有什么具体的区别呢？</p><p>我不喜欢做过多解释，我喜欢用事实说话。</p><p>所以，接下来，请看下图代码。</p><p><img src="https://static.chensuiyi.com/%E5%B0%8F%E5%86%8C/Nodejs%E5%AE%9E%E9%AA%8C%E6%8C%87%E5%8D%97/20.png" alt="写入文件代码"></p><p>很简单的代码，接下来，我们执行它（前面文章已经演示了如何执行 Node.js 代码，这里不做截图示例了）。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">node</span><span style="color:#98C379;"> read-write-file.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>结果如下图。</p><p><img src="https://static.chensuiyi.com/%E5%B0%8F%E5%86%8C/Nodejs%E5%AE%9E%E9%AA%8C%E6%8C%87%E5%8D%97/21.png" alt="写入文件结果"></p><p>可以看到，简单的 2 行代码，我们就创建了一个 1.txt 文件，同时，还写入了对应的文件内容。</p><p>所以，此刻，明白浏览器端的 JavaScript 和服务器端的 Node.js 区别没有？</p><p>虽然他们都使用的是 JavaScript 编程语法，但是，Node.js 可以操作电脑上的很多东西。浏览器端的 JavaScript，更多的是操作浏览器中的东西。</p><p>那么，接下里，我们试试如何读取文件内容，代码如下。</p><p><img src="https://static.chensuiyi.com/%E5%B0%8F%E5%86%8C/Nodejs%E5%AE%9E%E9%AA%8C%E6%8C%87%E5%8D%97/22.png" alt="读取文件代码"></p><p>在控制台运行对应的文件。</p><p><img src="https://static.chensuiyi.com/%E5%B0%8F%E5%86%8C/Nodejs%E5%AE%9E%E9%AA%8C%E6%8C%87%E5%8D%97/23.png" alt="读取文件结果"></p><p>可以看到，我们前面文章教程写的简单的 http 应用的代码，就被打印出来了。</p><p>那么，修改和删除文件的代码分别是什么呢？</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 修改文件，只需要重新写一遍新的内容就行了</span></span>
<span class="line"><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./1.txt&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;这是我覆盖的文件内容&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 如果不想覆盖内容，则设置写入参数的flag值为&#39;a&#39;（追加）</span></span>
<span class="line"><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./1.txt&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;这是我追加的文件内容&#39;</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">flag</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 删除文件</span></span>
<span class="line"><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">unlinkSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./1.txt&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>具体效果我就不截图了，请同学们亲自试验一下，感受一下前端之外的编程之美。</p><p>更多内容，请访问 <a href="https://chensuiyi.com" target="_blank" rel="noreferrer">陈随易 https://chensuiyi.com</a>。</p>`,22),t=[l];function o(c,r,i,d,y,B){return n(),a("div",null,t)}const u=s(e,[["render",o]]);export{_ as __pageData,u as default};
