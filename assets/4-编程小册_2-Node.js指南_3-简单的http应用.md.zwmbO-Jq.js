import{_ as s,c as p,o as t,U as a}from"./chunks/framework.QkLTjxkX.js";const u=JSON.parse('{"title":"简单的 Http 应用","description":"","frontmatter":{"isOriginal":true,"icon":"markdown","category":"Node.js指南","tag":["简单的 Http 应用"]},"headers":[],"relativePath":"4-编程小册/2-Node.js指南/3-简单的http应用.md","filePath":"4-编程小册/2-Node.js指南/3-简单的http应用.md","lastUpdated":null}'),e={name:"4-编程小册/2-Node.js指南/3-简单的http应用.md"},n=a(`<h1 id="简单的-http-应用" tabindex="-1">简单的 Http 应用 <a class="header-anchor" href="#简单的-http-应用" aria-label="Permalink to &quot;简单的 Http 应用&quot;">​</a></h1><p>web 领域，和网站打交道是最多的。这里呢，我们就尝试创建一个简单的网站应用。</p><p>这里，我们需要用到 Node.js 的核心模块 http。什么是核心模块呢？就是，你安装好 Node.js 后，Node.js 自带的模块，不需要我们下载就能使用的模块。</p><p><img src="https://static.chensuiyi.com/%E5%B0%8F%E5%86%8C/Nodejs%E5%AE%9E%E9%AA%8C%E6%8C%87%E5%8D%97/10.png" alt="简单的http应用"></p><p>代码很简单，就几行而已，但是，却能实现一个最简单的 http 服务。</p><p><img src="https://static.chensuiyi.com/%E5%B0%8F%E5%86%8C/Nodejs%E5%AE%9E%E9%AA%8C%E6%8C%87%E5%8D%97/11.png" alt="运行http应用"></p><p>使用 node 命令运行，能够看到&quot;http 服务器已启动&quot;提示，同时，会有一个光标不断删动，表示这是一个持续运行的程序。</p><p>为什么要持续运行呢？理由很简单，如果一个网站不能持续运行，别人怎么随时访问你的网站？</p><p><img src="https://static.chensuiyi.com/%E5%B0%8F%E5%86%8C/Nodejs%E5%AE%9E%E9%AA%8C%E6%8C%87%E5%8D%97/12.png" alt="访问http应用"></p><p>运行后，在浏览器地址栏输入 127.0.0.1:3000，就能看到 http 服务器返回的 hello world！</p><p>接下来，简单介绍一下，这个 http 服务器的代码组成。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> http</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;http&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>第一行，表示将 http 模块拿出来，require 就是需要的意思。我们要创建 http 服务器，就需要 http 模块，需要什么拿什么。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">http</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hello world!&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}).</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这段代码，表示创建一个服务器，同时，监听 3000 端口。</p><p>当我们通过浏览器地址栏访问 127.0.0.1:3000 的时候，就会被这段代码创建的 http 服务器监听到，同时返回 hello world 给浏览器。</p><p>req 是 request（请求）的缩写，只是个变量而已，命令为其他变量名也行。</p><p>res 是 response（响应）的缩写，包含了我们要返回给浏览器数据的相关方法和属性。</p><p>比如，response 的 end 方法，就表示，结束当前请求，并返回 hello world！给浏览器。</p><p>学习知识，切记量力而行，不要强行去挖掘深处的理解。</p><p>这篇文章，你只需要明白，怎么创建 http 服务器，怎么返回数据，知道它的基本流程就行了。</p><p>当然，不排除你天赋较高，叫你不要深挖细节，说不定扼杀了一个电脑天才。</p><p>不过，凡事，适可而止，想不通继续往后面学，不要往深处学，学的东西多了，自然会懂，切记，切记！</p><p>更多内容，请访问 <a href="https://chensuiyi.com" target="_blank" rel="noreferrer">陈随易 https://chensuiyi.com</a>。</p>`,24),o=[n];function l(r,c,i,d,h,B){return t(),p("div",null,o)}const E=s(e,[["render",l]]);export{u as __pageData,E as default};
